#include <stdlib.h>
#include <stdio.h>
#include <math.h>

#define PI 3.1415926535





int main(void){
	printf("Starting runningkernel.cu!\n");

	int num_elements = 100;
	int num_bytes = num_elements * sizeof(int);

	float *device_array = 0;
	float *host_array = 0;

	// allocate memory
	host_array = (float*)malloc(num_bytes);
	cudaMalloc((void**)&device_array, num_bytes);


	kernel1<<<10,10>>>(device_array);
	
	cudaMemcpy(host_array, device_array, num_bytes, cudaMemcpyDeviceToHost);

	printf("kernel1 results:\n");
	for(int i = 0; i < num_elements; ++i)
	{
		printf("%f \n", host_array[i]);
	}
	printf("\n\n");


	return 0;
}